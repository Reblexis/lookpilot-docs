name: Build and Deploy Documentation Site

on:
  push:
    branches: [ main ]
  workflow_dispatch:

permissions:
  contents: read
  pages: write
  id-token: write

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18'
          cache: 'npm'

      - name: Install dependencies
        run: |
          npm init -y
          npm install marked highlight.js fs-extra glob

      - name: Build static site
        run: |
          node << 'EOF'
          const fs = require('fs-extra');
          const path = require('path');
          const { marked } = require('marked');
          const hljs = require('highlight.js');
          const glob = require('glob');

          // Configure marked with syntax highlighting
          marked.setOptions({
            highlight: function(code, lang) {
              if (lang && hljs.getLanguage(lang)) {
                return hljs.highlight(code, { language: lang }).value;
              }
              return hljs.highlightAuto(code).value;
            }
          });

          // Create output directory
          fs.ensureDirSync('_site');
          fs.ensureDirSync('_site/docs');

          // Copy static assets
          fs.copySync('docs', '_site/docs');

          // Generate index page
          const indexData = fs.readJsonSync('docs/index.json');
          
          const indexHtml = `
          <!DOCTYPE html>
          <html lang="en">
          <head>
            <meta charset="UTF-8">
            <meta name="viewport" content="width=device-width, initial-scale=1.0">
            <title>LookPilot Documentation</title>
            <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/highlight.js/11.9.0/styles/github-dark.min.css">
            <style>
              body { font-family: -apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, sans-serif; line-height: 1.6; max-width: 1200px; margin: 0 auto; padding: 20px; background: #0d1117; color: #e6edf3; }
              .header { text-align: center; margin-bottom: 40px; }
              .header h1 { color: #58a6ff; margin-bottom: 10px; }
              .guides-grid { display: grid; grid-template-columns: repeat(auto-fit, minmax(300px, 1fr)); gap: 20px; }
              .guide-card { background: #161b22; border: 1px solid #30363d; border-radius: 8px; padding: 20px; }
              .guide-card h3 { color: #58a6ff; margin-bottom: 10px; }
              .guide-card p { color: #8b949e; margin-bottom: 15px; }
              .guide-link { display: inline-block; padding: 8px 16px; background: #238636; color: white; text-decoration: none; border-radius: 6px; }
              .guide-link:hover { background: #2ea043; }
              .platform-badge { display: inline-block; padding: 2px 8px; background: #1f6feb; color: white; border-radius: 12px; font-size: 0.8em; margin-right: 5px; }
            </style>
          </head>
          <body>
            <div class="header">
              <h1>üéØ LookPilot Documentation</h1>
              <p>Community-driven guides for LookPilot head tracking</p>
            </div>
            
            <div class="guides-grid">
              ${indexData.structure['game-docs'].map(game => {
                const manifest = fs.readJsonSync(game.manifestPath);
                const platforms = Object.keys(manifest.platforms).filter(p => manifest.platforms[p]);
                
                return `
                  <div class="guide-card">
                    <h3>${manifest.name}</h3>
                    <p>${manifest.description}</p>
                    <div>
                      ${platforms.map(platform => 
                        `<span class="platform-badge">${platform}</span>`
                      ).join('')}
                    </div>
                    <div style="margin-top: 15px;">
                      ${platforms.map(platform => 
                        `<a href="docs/${game.path}/${platform}.html" class="guide-link">${platform.charAt(0).toUpperCase() + platform.slice(1)} Guide</a>`
                      ).join(' ')}
                    </div>
                  </div>
                `;
              }).join('')}
            </div>
          </body>
          </html>
          `;
          
          fs.writeFileSync('_site/index.html', indexHtml);

          // Convert all Markdown files to HTML
          const markdownFiles = glob.sync('docs/**/*.md');
          
          markdownFiles.forEach(file => {
            const content = fs.readFileSync(file, 'utf8');
            const html = marked(content);
            
            const htmlFile = file.replace('.md', '.html').replace('docs/', '_site/docs/');
            const dir = path.dirname(htmlFile);
            fs.ensureDirSync(dir);
            
            const fullHtml = `
            <!DOCTYPE html>
            <html lang="en">
            <head>
              <meta charset="UTF-8">
              <meta name="viewport" content="width=device-width, initial-scale=1.0">
              <title>LookPilot Guide</title>
              <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/highlight.js/11.9.0/styles/github-dark.min.css">
              <style>
                body { font-family: -apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, sans-serif; line-height: 1.6; max-width: 800px; margin: 0 auto; padding: 20px; background: #0d1117; color: #e6edf3; }
                h1, h2, h3 { color: #58a6ff; }
                h2 { border-bottom: 1px solid #30363d; padding-bottom: 8px; }
                code { background: #161b22; padding: 2px 6px; border-radius: 3px; color: #ff7b72; }
                pre { background: #161b22; padding: 15px; border-radius: 6px; overflow-x: auto; }
                blockquote { border-left: 4px solid #58a6ff; padding-left: 15px; margin: 20px 0; background: rgba(88, 166, 255, 0.1); }
                .nav-links { margin-top: 40px; text-align: center; }
                .nav-links a { color: #58a6ff; text-decoration: none; margin: 0 15px; }
                .nav-links a:hover { text-decoration: underline; }
              </style>
            </head>
            <body>
              ${html}
              <div class="nav-links">
                <a href="../../index.html">‚Üê Back to All Guides</a>
              </div>
            </body>
            </html>
            `;
            
            fs.writeFileSync(htmlFile, fullHtml);
          });

          console.log('Site built successfully!');
          EOF

      - name: Setup Pages
        uses: actions/configure-pages@v4

      - name: Upload artifact
        uses: actions/upload-pages-artifact@v3
        with:
          path: '_site'

  deploy:
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    runs-on: ubuntu-latest
    needs: build
    if: github.ref == 'refs/heads/main'
    steps:
      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v4 